// Ejercicio 1 - Aleatorio
  //Seleccionar el bot√≥n y crear el evento
  const botonAct1 = document.querySelector("#botonAct1").addEventListener("click", catchNumber);
  //FUNCIONES --------------------------------------->
  function RandomNumber(max, min) {
    //Transformo en Int 
    max = parseInt(max);
    min = parseInt(min);

    //Creamos el n√∫mero aleatorio entre max(incluido) y min(incluido)
    const randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;
    //Devolvemos el valor
    return randomNumber;
  }
  function catchNumber() {
    //Capturo el valor de los inputs
    const input1 = document.querySelector("#num1").value;
    const input2 = document.querySelector("#num2").value;

    //Compruebo si los valores son n√∫meros o no
    if (isNaN(input1) || isNaN(input2)) {
      //Los datos ingresados no son n√∫mero
      alert("Lo siento tienes que ingresar un n√∫mero...");
    } else {
      const input_random = document.querySelector("#numeroAleatorio");

      if (input1 === input2) {
        //El n√∫mero es el mismo
        alert("Los dos n√∫meros son el mismo");
        //Imprimimos el valor
        input_random.innerHTML = input1;
      } else {
        if (input1 > input2) {
          //El n√∫mero de input1 es mayor que el n√∫mero de input2
          alert("El m√≠nimo es mayor que el m√°ximo...");
        } else {
          //Llamamos a la funcion RandomNumber
          const finalNumber = RandomNumber(input2, input1);
          //Imprimimos el valor
          input_random.innerHTML = finalNumber;
        }
      }
    }
  }

//Ejercicio 2 - String
  //Busco el bot√≥n mayusculas y minusculas y llamo a la variable changeLetter enviando un dato que especifica si es mayusculas o minusculas
    const btnUpper = document
    .querySelector("#btnupper")
    .addEventListener("click", function () {
      changeLetter("upper");
      });
    const btnLower = document
      .querySelector("#btnlower")
      .addEventListener("click", function () {
        changeLetter("lower");
      });
      
  //Busco el bot√≥n de Buscar 
    const btnSearch = document
      .querySelector("#btnSearch")
      .addEventListener("click", searchAny);
    
  //FUNCIONES --------------------------------------->

  //Esta funci√≥n convierte el texto en Upper o Lower, actualiza el contador de palabras, a√±ade el texto que posteriormente podr√° buscarse y finalmente hace el resumen.
  function changeLetter(type) {
    //Cantidad de palabras totales del resumen 
    const resumLength = 10;

    //Extraer el valor del textarea
    let textArea = document.querySelector("#texto").value;
    //Extraer el lugar donde se insertar√° el texto
    const insertText = document.querySelector("#finaltext");
    //Extraer el lugar donde se insertar√° la cantidad de palabras
    const allLetter = document.querySelector("#counterLetter");
    //Extraer el lugar donde se insertar√° el resumen de palabras
    const resumFinal = document.querySelector("#resumen");

    //CONVERTIDOR MAYUSCULA O MINUSCULA
    //Comprobamos si es mayuscula o es minuscula
    switch (type) {
      case "upper":
        //Transformarmos el texto
        textArea = textArea.toUpperCase();
        //Insertamos el texto
        insertText.innerHTML = textArea;
        break;
      case "lower":
        //Transformarmos el texto
        textArea = textArea.toLowerCase();
        //Insertamos el texto
        insertText.innerHTML = textArea;
        break;
      default:
        //console.log("Error no contemplado");
        insertText.innerHTML = "...";
    }
    //CONTADOR DE PALABRAS - ACTUALIZAR
    //Comprobar si hay texto o no
    if (textArea === "") {
      //A√±adir que hay 0 palabras
      allLetter.innerHTML = 0;
    } else {
      //Llamar a la funcion counterLetters
      let totalWords = counterLetters(textArea);
      //A√±adir que las palabras que hay
      allLetter.innerHTML = totalWords;
    }
    // A√ëADIR EL RESUMEN DE 10 PALABRAS
    createResum(resumFinal, resumLength, textArea);
  }
  //Esta funci√≥n se limita a contar las palabras de un texto
  function counterLetters(text) {
    let total = text.split(" ").length;
    return total;
  }
  //Esta funci√≥n se limita a crear un resumen, recibe el lugar donde insertara el texot, el total de palabras que tendra el resumen y el texto
  function createResum(position, totalNumber, text) {
    //Llamar a la funcion counterLetters
    let totalWords = counterLetters(text);

    //Comprobar si hay texto o no
    if (text === "") {
      //A√±adir nada
      position.innerHTML = " ";
    } else {
      //Comprobar la cantidad total de palabras
      if (totalWords <= totalNumber) {
        //Si el texto tiene menos o la misma cantidad de palabras que el tope m√°ximo se inserta sin mas
        position.innerHTML = text + "...";
      } else {
        //Inicializar variables
        let totalLetters = "";
        let i = 0;
        //Empezar a contar palabras
        for (let i = 0; i <= totalNumber; i++) {
          let Letters = text.split(" ")[i];
          totalLetters += Letters + " ";
        }
        //A√±adir el resumen
        position.innerHTML = totalLetters + "...";
      }
    }
  }
  //Esta funci√≥n se encarga de buscar una palabra en el texto y resaltarla
  function searchAny() {
    //Extraer el valor del textarea
    let textFinal = document.querySelector("#texto").value;

    //Extraer la palabra del input
    const word = document.querySelector("#searchWord").value;

    //Encontrar las veces que se repite
    const iterator = textFinal.matchAll(word);

    //Recorrer la cantidad de veces que se repite para guardar en la variable i la cantidad de repeticiones
    let i = 0;
    for (let ocurrence of iterator) {
      //console.log("coincidencias", ocurrence.index);
      i++;
    }

    //Remplazar el texto que buscamos por el mismo con la etiqueta mark
    nuevoTexto = textFinal.replaceAll(
      word,
      "<mark class='bg-primary text-light'>" + word + "</mark>"
    );
    
    //A√±adir el texto remarcado
    const mark = (document.querySelector("#finaltext").innerHTML = nuevoTexto);
    //A√±adir la cantidad de veces que encuentra la palabra
    const repeatword = (document.querySelector("#repeatWord").innerHTML = i);
  }


//EJERCICIO 3 - Date
  //Localizar el boton y a√±adir el evento
  const buttonName = document.querySelector("#transformName").addEventListener('click', function(){  
    //Extraer el valor del input que guarda el nombre
    const inputName = document.querySelector("#inputName").value;

    //Comprobar si el texto est√° vacio o no
    if(inputName === ""){
      alert("Lo siento no has introducido ning√∫n nombre...");
    } else {
      // Eliminar espacios de delante y de detr√°s
      let finalName = inputName.trim();

      //Reemplazar el espacio del medio por un gui√≥n
      finalName = finalName.replaceAll(" ", "-");

      //Convertir en mayusculas
      finalName = finalName.toUpperCase();

      //Introducir los datos  
      document.querySelector("#insertName").innerHTML = finalName;
      
      //console.log(finalName);
    }
  });

  //Localizar el boton y a√±adir el evento
  const buttonDate = document.querySelector("#transformDate").addEventListener('click', function(){
    //Extraer el valor del input que guarda la fecha
    const inputDate = document.querySelector("#inputDate").value;
    //Comprobar si la fecha est√° vacia o no
    if(inputDate === ""){
      alert("Lo siento no has introducido ning√∫n dato...");
    } else {
      //Substituir el / por el -
      finalDate = inputDate.replaceAll("/", "-");
      //Insertar el resultado
      document.querySelector("#insertDate").innerHTML = finalDate;
    }
  });

//EJERCICIO 4 - Generador de contrase√±as
  //Esta funcion crea una serie de caracteres
  function createLetters(){
    const abecedarioLower = "abcdefghijklmnopqrstuvwxyz";
    const abecedarioUpper =abecedarioLower.toUpperCase();
    const abecedario = abecedarioLower + abecedarioUpper;  
    return abecedario;
  }
  // Localizar el boton para generar la contrase√±a
  const buttonPass = document.querySelector("#buttonPass").addEventListener('click', function(){
    //Cantidad total de las letras de la password
    const lengthPass = 10;
    //Creamos la cadena de texto
    const chainLetters = createLetters();
    let passRandom = "";

    //Craeci√≥n de la cadena aleatoria

    for (let i = 0; i < lengthPass; i++) {
      //Creamos una variable que crea un aleatorio del total de caracteres que hay en chainLetters
      const letterRandom = Math.floor(Math.random() * chainLetters.length);
      // console.log(letterRandom);
      //A√±adimos el caracter de esa posicion
      passRandom += chainLetters[letterRandom];
    }
    //console.log(passRandom);
    //Introducir en el input como valor la contrase√±a obtenida
    const password = document.querySelector("#pass").value = passRandom;
  });

// EJERCICIO 5 - Generador de emoticonos
//Esta funcion crea una serie de emojis
function createEmojis(){
  const emojis = [
  	'üòÑ','üòÉ','üòÄ','üòä','‚ò∫','üòâ','üòç','üòò','üòö','üòó','üòô','üòú','üòù','üòõ','üò≥','üòÅ','üòî','üòå','üòí','üòû','üò£','üò¢','üòÇ','üò≠','üò™','üò•','üò∞','üòÖ','üòì','üò©','üò´','üò®','üò±','üò†','üò°','üò§','üòñ','üòÜ','üòã','üò∑','üòé','üò¥','üòµ','üò≤','üòü','üò¶','üòß','üòà','üëø','üòÆ','üò¨','üòê','üòï','üòØ','üò∂','üòá','üòè','üòë','üë≤','üë≥','üëÆ','üë∑','üíÇ','üë∂','üë¶','üëß','üë®','üë©','üë¥','üëµ','üë±','üëº','üë∏','üò∫','üò∏','üòª','üòΩ','üòº','üôÄ','üòø','üòπ','üòæ','üëπ','üë∫','üôà','üôâ','üôä','üíÄ','üëΩ','üí©','üî•','‚ú®','üåü','üí´','üí•','üí¢','üí¶','üíß','üí§','üí®','üëÇ','üëÄ','üëÉ','üëÖ','üëÑ','üëç','üëé','üëå','üëä','‚úä','‚úå','üëã','‚úã','üëê','üëÜ','üëá','üëâ','üëà','üôå','üôè','‚òù','üëè','üí™','üö∂','üèÉ','üíÉ','üë´','üë™','üë¨','üë≠','üíè','üíë','üëØ','üôÜ','üôÖ','üíÅ','üôã','üíÜ','üíá','üíÖ','üë∞','üôé','üôç','üôá','üé©','üëë','üëí','üëü','üëû','üë°','üë†','üë¢','üëï','üëî','üëö','üëó','üéΩ','üëñ','üëò','üëô','üíº','üëú','üëù','üëõ','üëì','üéÄ','üåÇ','üíÑ','üíõ','üíô','üíú','üíö','‚ù§','üíî','üíó','üíì','üíï','üíñ','üíû','üíò','üíå','üíã','üíç','üíé','üë§','üë•','üí¨','üë£','üí≠','üê∂','üê∫','üê±','üê≠','üêπ','üê∞','üê∏','üêØ','üê®','üêª','üê∑','üêΩ','üêÆ','üêó','üêµ','üêí','üê¥','üêë','üêò','üêº','üêß','üê¶','üê§','üê•','üê£','üêî','üêç','üê¢','üêõ','üêù','üêú','üêû','üêå','üêô','üêö','üê†','üêü','üê¨','üê≥','üêã','üêÑ','üêè','üêÄ','üêÉ','üêÖ','üêá','üêâ','üêé','üêê','üêì','üêï','üêñ','üêÅ','üêÇ','üê≤','üê°','üêä','üê´','üê™','üêÜ','üêà','üê©','üêæ','üíê','üå∏','üå∑','üçÄ','üåπ','üåª','üå∫','üçÅ','üçÉ','üçÇ','üåø','üåæ','üçÑ','üåµ','üå¥','üå≤','üå≥','üå∞','üå±','üåº','üåê','üåû','üåù','üåö','üåë','üåí','üåì','üåî','üåï','üåñ','üåó','üåò','üåú','üåõ','üåô','üåç','üåé','üåè','üåã','üåå','üå†','‚≠ê','‚òÄ','‚õÖ','‚òÅ','‚ö°','‚òî','‚ùÑ','‚õÑ','üåÄ','üåÅ','üåà','üåä','üéç','üíù','üéé','üéí','üéì','üéè','üéÜ','üéá','üéê','üéë','üéÉ','üëª','üéÖ','üéÑ','üéÅ','üéã','üéâ','üéä','üéà','üéå','üîÆ','üé•','üì∑','üìπ','üìº','üíø','üìÄ','üíΩ','üíæ','üíª','üì±','‚òé','üìû','üìü','üì†','üì°','üì∫','üìª','üîä','üîâ','üîà','üîá','üîî','üîï','üì¢','üì£','‚è≥','‚åõ','‚è∞','‚åö','üîì','üîí','üîè','üîê','üîë','üîé','üí°','üî¶','üîÜ','üîÖ','üîå','üîã','üîç','üõÅ','üõÄ','üöø','üöΩ','üîß','üî©','üî®','üö™','üö¨','üí£','üî´','üî™','üíä','üíâ','üí∞','üí¥','üíµ','üí∑','üí∂','üí≥','üí∏','üì≤','üìß','üì•','üì§','‚úâ','üì©','üì®','üìØ','üì´','üì™','üì¨','üì≠','üìÆ','üì¶','üìù','üìÑ','üìÉ','üìë','üìä','üìà','üìâ','üìú','üìã','üìÖ','üìÜ','üìá','üìÅ','üìÇ','‚úÇ','üìå','üìé','‚úí','‚úè','üìè','üìê','üìï','üìó','üìò','üìô','üìì','üìî','üìí','üìö','üìñ','üîñ','üìõ','üî¨','üî≠','üì∞','üé®','üé¨','üé§','üéß','üéº','üéµ','üé∂','üéπ','üéª','üé∫','üé∑','üé∏','üëæ','üéÆ','üÉè','üé¥','üÄÑ','üé≤','üéØ','üèà','üèÄ','‚öΩ','‚öæ','üéæ','üé±','üèâ','üé≥','‚õ≥','üöµ','üö¥','üèÅ','üèá','üèÜ','üéø','üèÇ','üèä','üèÑ','üé£','‚òï','üçµ','üç∂','üçº','üç∫','üçª','üç∏','üçπ','üç∑','üç¥','üçï','üçî','üçü','üçó','üçñ','üçù','üçõ','üç§','üç±','üç£','üç•','üçô','üçò','üçö','üçú','üç≤','üç¢','üç°','üç≥','üçû','üç©','üçÆ','üç¶','üç®','üçß','üéÇ','üç∞','üç™','üç´','üç¨','üç≠','üçØ','üçé','üçè','üçä','üçã','üçí','üçá','üçâ','üçì','üçë','üçà','üçå','üçê','üçç','üç†','üçÜ','üçÖ','üåΩ','üè†','üè°','üè´','üè¢','üè£','üè•','üè¶','üè™','üè©','üè®','üíí','‚õ™','üè¨','üè§','üåá','üåÜ','üèØ','üè∞','‚õ∫','üè≠','üóº','üóæ','üóª','üåÑ','üåÖ','üåÉ','üóΩ','üåâ','üé†','üé°','‚õ≤','üé¢','üö¢','‚õµ','üö§','üö£','‚öì','üöÄ','‚úà','üí∫','üöÅ','üöÇ','üöä','üöâ','üöû','üöÜ','üöÑ','üöÖ','üöà','üöá','üöù','üöã','üöÉ','üöé','üöå','üöç','üöô','üöò','üöó','üöï','üöñ','üöõ','üöö','üö®','üöì','üöî','üöí','üöë','üöê','üö≤','üö°','üöü','üö†','üöú','üíà','üöè','üé´','üö¶','üö•','‚ö†','üöß','üî∞','‚õΩ','üèÆ','üé∞','‚ô®','üóø','üé™','üé≠','üìç','üö©','‚¨Ü','‚¨á','‚¨Ö','‚û°','üî†','üî°','üî§','‚Üó','‚Üñ','‚Üò','‚Üô','‚Üî','‚Üï','üîÑ','‚óÄ','‚ñ∂','üîº','üîΩ','‚Ü©','‚Ü™','‚Ñπ','‚è™','‚è©','‚è´','‚è¨','‚§µ','‚§¥','üÜó','üîÄ','üîÅ','üîÇ','üÜï','üÜô','üÜí','üÜì','üÜñ','üì∂','üé¶','üàÅ','üàØ','üà≥','üàµ','üà¥','üà≤','üâê','üàπ','üà∫','üà∂','üàö','üöª','üöπ','üö∫','üöº','üöæ','üö∞','üöÆ','üÖø','‚ôø','üö≠','üà∑','üà∏','üàÇ','‚ìÇ','üõÇ','üõÑ','üõÖ','üõÉ','üâë','„äô','„äó','üÜë','üÜò','üÜî','üö´','üîû','üìµ','üöØ','üö±','üö≥','üö∑','üö∏','‚õî','‚ú≥','‚ùá','‚ùé','‚úÖ','‚ú¥','üíü','üÜö','üì≥','üì¥','üÖ∞','üÖ±','üÜé','üÖæ','üí†','‚ûø','‚ôª','‚ôà','‚ôâ','‚ôä','‚ôã','‚ôå','‚ôç','‚ôé','‚ôè','‚ôê','‚ôë','‚ôí','‚ôì','‚õé','üîØ','üèß','üíπ','üí≤','üí±','¬©','¬Æ','‚Ñ¢','„ÄΩ','„Ä∞','üîù','üîö','üîô','üîõ','üîú','‚ùå','‚≠ï','‚ùó','‚ùì','‚ùï','‚ùî','üîÉ','üïõ','üïß','üïê','üïú','üïë','üïù','üïí','üïû','üïì','üïü','üïî','üï†','üïï','üïñ','üïó','üïò','üïô','üïö','üï°','üï¢','üï£','üï§','üï•','üï¶','‚úñ','‚ûï','‚ûñ','‚ûó','‚ô†','‚ô•','‚ô£','‚ô¶','üíÆ','üíØ','‚úî','‚òë','üîò','üîó','‚û∞','üî±','üî≤','üî≥','‚óº','‚óª','‚óæ','‚óΩ','‚ñ™','‚ñ´','üî∫','‚¨ú','‚¨õ','‚ö´','‚ö™','üî¥','üîµ','üîª','üî∂','üî∑','üî∏','üîπ'
  ];
  return emojis;
}
// Localizar el boton para generar el emoji aleatorio
const buttonEmoji = document.querySelector("#buttonEmoji").addEventListener('click', function(){
    //Llamamos la cadena de emojis
    const emojis = createEmojis();
    //Obtenemos un numero aleatorio de todos los emojis
    const emojiRandom = Math.floor(Math.random() * emojis.length);
    //Insertamos el emoji random
    document.querySelector("#insertEmoji").innerHTML = emojis[emojiRandom];
})


